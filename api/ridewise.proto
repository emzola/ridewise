syntax = "proto3";
option go_package = "/genproto";

// -----------------Rider Service-----------------
service RiderService {
    rpc CreateRider(CreateRiderRequest) returns (CreateRiderResponse);
    rpc GetRider(GetRiderRequest) returns (GetRiderResponse);
    rpc UpdateRider(UpdateRiderRequest) returns (UpdateRiderResponse);
    rpc DeleteRider(DeleteRiderRequest) returns (DeleteRiderResponse);
}

message Rider {
    string id = 1;
    string first_name = 2;
    string last_name = 3;
    string phone = 4;
    string email = 5;
    bool is_verified = 6;
    map<string, Location> saved_locations = 7;
}

message Location {
    string name = 1;
    double latitude = 2;
    double longitude = 3;
}

message CreateRiderRequest {
    string phone = 1;
}

message CreateRiderResponse {
    Rider created_rider = 1;
}

message GetRiderRequest {
    string id = 1;
}

message GetRiderResponse {
    Rider rider = 1;
}

message UpdateRiderRequest {
    string id = 1;
    string first_name = 2;
    string last_name = 3;
    string phone = 4;
    string email = 5;
    map<string, Location> saved_locations = 6;
}

message UpdateRiderResponse {
    Rider updated_rider = 1;
}

message DeleteRiderRequest {
    string id = 1;
}

message DeleteRiderResponse {
    string message = 1;
}

// -----------------Authentication Service-----------------
service AuthenticationService {
    rpc GenerateOTP(GenerateOTPRequest) returns (GenerateOTPResponse);
    rpc VerifyOTP(VerifyOTPRequest) returns (VerifyOTPResponse);
    rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);
    rpc DeleteRefreshToken(DeleteRefreshTokenRequest) returns (DeleteRefreshTokenResponse);
}

message GenerateOTPRequest {
    string phone_number = 1;
}

message GenerateOTPResponse {
    string otp = 1;
}

message VerifyOTPRequest {
    string otp = 1;
}

message VerifyOTPResponse {
    string access_token = 1;
    string refresh_token = 2;
}

message RefreshTokenRequest {
    string refresh_token = 1;
}

message RefreshTokenResponse {
    string access_token = 1;
}

message DeleteRefreshTokenRequest {
    string refresh_token = 1;
}

message DeleteRefreshTokenResponse {
    string message = 1;
}

// -----------------SMS Notification Service-----------------
service SMSNotificationService {
    rpc SendSMS (SendSMSRequest) returns (SendSMSResponse);
}

message SendSMSRequest {
    string content = 1;
    string from = 2;
    string to = 3;
}

message SendSMSResponse {
    string message = 1;
}